{
  "swagger": "2.0",
  "info": {
    "title": "Offender Management Allocation API",
    "version": "v1"
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Gets system health",
        "tags": [
          "System"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the system health"
          }
        }
      }
    },
    "/poms/1,2,3": {
      "get": {
        "summary": "Prisoner Offender Managers by multiple ID",
        "tags": [
          "Allocation"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Gets a list of Prisoner Offender Managers"
          }
        }
      }
    },
    "/allocation": {
      "post": {
        "summary": "Creates a new allocation",
        "tags": [
          "Allocation"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": ""
          }
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "allocation",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "staff_id": {
                  "type": "string"
                },
                "offender_no": {
                  "type": "string"
                },
                "offender_id": {
                  "type": "string"
                },
                "allocated_at_tier": {
                  "type": "string"
                },
                "prison": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "override_reason": {
                  "type": "string"
                },
                "note": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              },
              "required": [
                "staff_id",
                "offender_no",
                "offender_id",
                "prison",
                "note"
              ]
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Must be authenticated to create an allocation"
          },
          "200": {
            "description": "Generates an error with missing data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "status": "error",
                "errorMessage": "Validation failed: Offender no can't be blank, Offender can't be blank, Prison can't be blank, Allocated at tier can't be blank, Created by can't be blank"
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Gets database status",
        "tags": [
          "System"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Was not authenticated to return the database status"
          },
          "200": {
            "description": "Successfully returned the database status",
            "examples": {
              "application/json": {
                "status": "ok",
                "postgresVersion": "PostgresSQL 10.0"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "postgresVersion": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "...",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}