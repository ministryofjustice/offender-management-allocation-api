version: 2.0

jobs:
  build_application:
    working_directory: ~/offender-management-allocation-api
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          PG_HOST: 127.0.0.1
          PG_USER: ubuntu
          RACK_ENV: test
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
#      - restore_cache:
#          keys:
#            - offender-management-allocation-api-v1-{{ checksum "Gemfile.lock" }}
#            - offender-management-allocation-api-v1-
      - run: gem install did_you_mean -v 1.2.1
      - run: bundle check --path vendor/bundle || bundle install --path vendor/bundle
      - save_cache:
          key: offender-management-allocation-api-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  build_database:
    docker:
      - image: circleci/postgres:10.5-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: allocation-api_test

  set_up_code_climate:
    command: |
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      chmod +x ./cc-test-reporter

  set_up_db:
    command: |
      bundle exec rake db:create db:schema:load --trace
      bundle exec rake db:migrate

  run_tests:
    command: |
      ./cc-test-reporter before-build
      bundle exec rake
      ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

  store_test_results:
    path: coverage

  store_artifacts:
    path: coverage

workflows:
  version: 2

  build_and_test_workflow:
    jobs:
      - build_database
      - set_up_code_climate
      - build_application
      - setup_db:
          requires: 
            - build_database
      - run_tests:
          requires:
            - build_application
      - store_test_results:
          requires:
            - run_tests
      - store_artifacts:
          requires:
            - build_application
